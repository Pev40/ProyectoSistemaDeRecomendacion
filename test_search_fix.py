#!/usr/bin/env python3
"""
Script r√°pido para probar el arreglo de b√∫squeda de pel√≠culas
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

import asyncio
from database import DatabaseManager, MovieLensDatabase

async def test_search_fix():
    """Prueba r√°pida del arreglo de b√∫squeda"""
    print("üß™ PRUEBA R√ÅPIDA DEL ARREGLO DE B√öSQUEDA")
    print("=" * 50)
    
    try:
        # Conectar
        print("üìä Conectando...")
        db_manager = DatabaseManager()
        await db_manager.connect()
        movie_db = MovieLensDatabase(db_manager)
        
        # Probar b√∫squedas
        queries = ["matrix", "toy story", "star wars", "batman"]
        
        for query in queries:
            print(f"\nüîç Buscando: '{query}'")
            try:
                results = await movie_db.search_movies(query, 3)
                print(f"   ‚úÖ {len(results)} resultados encontrados")
                for movie in results[:2]:
                    title = movie.get('title', 'Sin t√≠tulo')
                    movie_id = movie.get('movieId', 'N/A')
                    print(f"      ‚Ä¢ {title} (ID: {movie_id})")
            except Exception as e:
                print(f"   ‚ùå Error: {e}")
        
        await db_manager.disconnect()
        print(f"\n‚úÖ Prueba completada - El arreglo funciona!")
        
    except Exception as e:
        print(f"‚ùå Error: {e}")

if __name__ == "__main__":
    asyncio.run(test_search_fix()) 